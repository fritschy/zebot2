#!/usr/bin/env python3

from handler_lib import handler_exit, get_args, get_from

import errno
import json
import os
import sys
from subprocess import run, PIPE

arg = get_args()

def make_req(code):
    j = json.dumps({
            'channel': 'stable',
            'mode': 'debug',
            'edition': '2021',
            'crateType': 'bin',
            'tests': False,
            'code': '#[allow(unused_imports)]\nuse std::{io, mem};\nfn main() {\n%s\n;}' % code,
            'backtrace': False
        })
    return j

c = run(['curl', '-s', '-X', 'POST', '-H', 'Content-Type: application/json', '-d', make_req(arg), 'https://play.rust-lang.org/execute'], stdout=PIPE)

r = json.loads(c.stdout.decode('utf-8'))

def make_lines(r):
    l = r.splitlines()
    if len(l) == 0:
        return ["(no output)"]
    return l

if r.get('success') and len(r['stdout']) > 0:
    handler_exit(0, lines=r['stdout'].splitlines(), box=0)
else:
    handler_exit(0, lines=r['stderr'].splitlines())
